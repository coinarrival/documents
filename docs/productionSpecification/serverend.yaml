openapi: 3.0.2
info:
  title: CoinArrival-Serverend
  description: Serverend API conrtains of CoinArrival.
  version: 0.1.0
  
servers:
  - url: http://localhost:4000
    description: default serverend host

paths:
  /public/*:
    get:
      summary: Get public assests
      description: Get public assests
      responses:
        200:
          description: Network OK, resouces sent.
        404:
          description: Resource not found.
  /login:
    post:
      summary: Verify the username and password
      description: Check if there's a valid account match the given username and password
      requestBody:
        description: A JSON object containing username and password of the account to be verified
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        '200': 
          description: Network OK. A JSON object containing status üê¥ will be returned to requester.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    description: An integer code indicating the response status. 200 for Successfully login, 406 for no such username or unmatched password.
          examples:
            SuccessfullyLogin:
              status_code: 200
            InvalidPassword:
              status_code: 406
        '500':
          description: Serverend or backend error.
  /account_info:
    get:
      summary: Get user info
      description: Get user info by giving the username.
      parameters: 
        - in: query
          name: username
          schema:
            type: string
          required: true
          description: username of queryed user
      responses:
        '200':
          description: Network OK. A JSON object containing status üê¥ will be returned to requester.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    description: An integer code indicating the response status. 200 for Successfully queryed, 400 for necessary field not filled, 404 for user not found.
                  data:
                    type: object
                    description: A JSON object containing queryed info. Only avaliable when status_code is 200.
                    properties:
                      username:
                        type: string
                      email:
                        type: string
                      phone:
                        type: string
                      avatar:
                        type: string
          examples:
            SuccessfulltQueryed:
              status_code: 200
              data:
                username: example
                email: example@example.com
                phone: 12345678901
                avatar: EXAMPLE.PNG
            FieldNotFilled:
              status_code: 400
            NoSuchUser:
              status_code: 404
        '500':
          description: Serverend or backend error.
    post:
      summary: Update account info
      description: Update account info with given info
      requestBody:
        description: A JSON object contating all info needed to update
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                password:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                avatar:
                  type: string
      responses:
        '200':
          description: Network OK. A JSON object containing status üê¥ will be returned to requester.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    description: An integer code indicating the response status. 201 for Successfully updated, 400 for necessary field not filled, 401 for requesting before login.
          examples:
            SuccessfullyUpdated:
              status_code: 201
            FieldNotFilled:
              status_code: 400
            NotLogin:
              status_code: 401
        '500':
          description: Serverend or backend error.
  /registration:
    post:
      summary: Create an account
      description: Create an account with given info
      requestBody:
        description: A JSON object containing all info to create an account.
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                password:
                  type: string
                  required: true
      responses:
        '200':
          description: Network OK. A JSON object containing status üê¥ will be returned to requester.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status_code:
                    type: integer
                    description: An integer code indicating the response status. 201 for Successfully created, 400 for necessary field not filled, 409 for username conflict.
          examples:
            SuccessfullyCreated:
              status_code: 201
            FieldNotFilled:
              status_code: 400
            ConflictUsername:
              status_code: 409
        '500':
          description: Serverend or backend error.